
// Test

//import "test1-import.env"
//import "test2.txt"

@predicates 

def blah1() = { println("test") }

def blah(a:type1, c:type2) = { 
    println("test -- init")    
    get { 
        //var a = 123 + "abc"
        println("test -- getter")
        return true
    }
    set {
        println("test -- setter")
    }
}

def cat(c:type1, d:type2) = { 
    println("cat -- init")    
    get { 
        //var a = 123 + "abc"
        println("cat -- getter")
        return true
    }
    set {
        println("cat -- setter")
    }
}

def dog(d:type2, e:type1) = { 
    println("dog -- init")    
    get { 
        //var a = 123 + "abc"
        println("dog -- getter")
        println(d)
        return true
    }
    set {
        println("dog -- setter")
    }
}

def giraffe(a:type2, b:type1) = { 
    println("giraffe -- init")    
    get { 
        //var a = 123 + "abc"
        println("giraffe -- getter")        
        return true
    }
    set {
        //if (a.name == "g") {
        if (a.name == 123) {        
            a.paramtest = "123"
        } else {
            a.paramtest = "456"
        }
        moveObj(a to b)
        println("giraffe -- setter")
    }
}

@rules

//rule abc(c=c) :: cat(c=c) * dog(d=d) -o giraffe(g=g)
rule animalrunner(t1:type1, t2:type2) :: cat(c=t1, d=t2) * dog(d=t2, e=t1) -o giraffe(a=t2, b=t1)
//rule animalrunner(t1:type1, t2:type2) :: cat(c=t1, d=t2) * test(d=t2, e=t1) -o test(a=t2)


@init

println("test")
var d = new Bob
d.name = "d"
addObjToWorld(d)

var e = new type1
e.name = "e"
addObjToWorld(e)

var f = new type2
addObjToWorld(f)
f.name = "f"

var g = new type2
addObjToWorld(g)
g.name = "g"
